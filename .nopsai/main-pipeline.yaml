name: Main-Pipeline
description: A sample pipeline.
llm_content_sharing: true
llm_content_ignore:
  - ".git"
  - "README.md"
  - "*file"
llm_output_sharing: true
display_options:
  github_view: "mermaid" # mermaid, tree or flat
container_image: "pipeline-image:latest"
working_directory: "/tmp/test"
timeout: "20m"
environment:
  - DOCKER_HOST
  - API_VERSION
  - TEST_ENV
steps:
  - name: preparation
    image: pipeline-image:latest
    secrets:
      - TEST_SECRET
    volumes:
      - "sample-exisitng:/tmp/sample-exisitng"
      - "sample-new:/tmp/sample-new"
    tasks:
      - name: git-clone
        ignore_failure: false
        script: |
          #!/bin/bash
          git clone https://github.com/hosein-yousefii/test-app.git
          echo $TEST_SECRET

      - name: waiting-time
        goal: wait for 2 seconds
        llm_output_sharing: false
        depends_on:
        - git-clone

      - name: list-envs-containers
        script: |
          #!/bin/bash
          env
          echo $TEST_SECRET|awk '{print $2,$1,$3,$4,$5,$6}'
        depends_on:
        - git-clone

      - name: branch-versioning
        goal: "Change branch to nopsai-test and get the latest tag"
        depends_on:
        - git-clone

      - name: commit-hash
        goal: "what is the commit hash?"
        depends_on:
        - branch-versioning
  - name: image-scanning
    include: "pipeline:reference-pipeline"
    condition: "If the latest tag from preparation step was bigger than 2.0.0"
    sync: false
    secrets:
      - TEST_SECRET
    volumes:
      - "sample-exisitng:/tmp/sample-exisitng"
    depends_on:
    - preparation

  - name: included-main-pipeline
    include: "pipeline:include-pipeline"
    sync: false
    secrets:
      - TEST_SECRET
    depends_on:
    - preparation
    
  - name: secret-validation
    image: ubuntu:latest
    secrets:
      - TEST_SECRET
    depends_on:
    - preparation
    tasks:
      - name: write-secret
        goal: write the value of TEST_SECRET env to sample.txt

      - name: test-secret
        script: |
          #!/bin/bash
          cat sample.txt
        depends_on:
        - write-secret

  - name: docker-builder
    volumes:
      - "sample-exisitng:/tmp/sample-exisitng"
    depends_on:
    - preparation
    tasks:
      - name: dockerfile-modification
        goal: "Modify Dockerfile and add copy statement to add docker-compose"

      - name: dockerfile-content
        goal: "show dockerfile content"
        llm_output_sharing: false
        depends_on:
        - dockerfile-modification
      
      - name: show-volumes
        script: |
          #!/bin/bash
          df -h

      - name: build-docker
        goal: build docker image with repo name and 3 tag, latest,latest git tag and commit hash 
        depends_on:
        - dockerfile-modification

  - name: overwrite
    include: "step:simple-step"
    ignore_failure: false
    llm_output_sharing: true
    secrets:
      - TEST_SECRET
    volumes:
      - "sample-exisitng:/tmp/sample-exisitng"
    depends_on:
    - secret-validation
    
  - name: Check-steps
    goal: "Give me lines from history which are important"
    image: alpine:latest
    llm_output_sharing: false
    depends_on:
    - docker-builder

  - name: report
    goal: "provide a report of all steps"
    volumes:
      - "sample-exisitng:/tmp/sample-exisitng"
    depends_on:
    - Check-steps
